#!/bin/bash
# Version 0.2
# Since Jan 2015 rewritten and maintained by Fabio Pardi
# What's new:
# * Avoid concurrency problems, so you can run multiple checks at the same time without interference 
# * Check for exit code, and return warning or alert in case something goes wrong

# Suggestions are welcome. Send them to pachistano@gmail.com

# Variables definition

# my PID
mypid="$$"
html_tmp="/tmp/tmp_html.$mypid"
rep_tmp="/tmp/tmp_rep.$mypid"
add_uri='https://'
end_uri='/'
PORT=''
exit_code=2

if [ $# -lt 1 ]
then
        echo "Argument required. Tell me which website to check."
	exit 1
fi


if [ $# -gt 1 ]
then
	PORT=:$2
fi

/usr/bin/wget --no-check-certificate --output-document=$html_tmp -S $add_uri$1$PORT$end_uri$3 2> $rep_tmp 


case $? in 
	0) cat $rep_tmp | grep "HTTP/1" | grep "OK"
          exit_code=0
	;;

	1) echo Generic error code.
	cat $rep_tmp | grep "HTTP/1"
          exit_code=1
	;;

        2) echo  "Parse error, for instance, when parsing command-line options, the .wgetrc or .netrc..."
	 exit_code=1
	;;

        3) echo   "File I/O error"
          exit_code=1
	;;

        4) echo "Network failure, cannot contact website"
	cat $rep_tmp | grep "HTTP/1"
          exit_code=2
	;;

        7) echo  "Protocol errors"
	  exit_code=1
	;;

        8) #server is able to serve the page, but still something is wrong in the page
	 cat $rep_tmp | grep "HTTP/1"
	  exit_code=1
	;;
	*) echo "Unknown error"
	exit_code=2
	;;
	
esac
if [ -e $html_tmp ]
then
	rm $html_tmp
fi

if [ -e $rep_tmp ]
then
        rm $rep_tmp
fi
exit $exit_code
